/* .container {
  display: flex;
  background-color: tomato;
  margin: 10px;
  width: 200px;
  height: 500px;
}
.item {
  flex-basis: 200px;
  height: 200px;
  border: 3px solid yellow;
  font-size: 50px;
  background-color: skyblue;
}
.item:nth-child(1) {
  flex-shrink: 1;
}
.item:nth-child(2) {
  flex-shrink: 2;
}
flex-shrink는 숫자가 클수록 많이 줄어듬
.item:nth-child(3) {
  flex-shrink: 1;
} */

/* .container2 {
  display: flex;
  height: 100px;
  border: 3px solid #333;
  width: 50%;
}

.item2 {
  flex-grow: 0;
  0(기본값)일때 컨테이너사이즈와 상관없이 자신의 너비 유지 
     1일때는 컨테이너사이즈를 따라옴
  flex-shrink: 1  ;
  0일때는 컨텐츠 크기로 고정되어 줄어들지않음
  1(기본값)일때 컨테이너사이즈를 따라옴
  margin: 5px;
  background-color: orange;
  transition: .5s ;
  width: 1300px;
}

.item2:hover {
  flex-grow: 1  ;
} */

/* .container3 {
  display: flex;
  height: 100px;
  border: 3px solid #333;
  width: 50%;
}

.item3 {
  margin: 5px;
  background-color: skyblue;
  flex: 1;
  flex-basis: auto;
  basis : 아이템의 기본 크기
   auto를 주면 컨텐츠 길이에 맞춰서 너비가 결정
   0을 주면 컨테이너 길이에 맞춰 너비 결정
  flex1, flex-basis가 0일때 컨테이너크기에 맞춰서 item이 균등분배됨
  auto는 아이템사이즈에따라 넓이가 차등분배됨
  text-align: center; line-height: 100px;
} */
  
/* .container4 {
  display: flex;
  height: 100px;
  border: 3px solid #333;
  width: 50%;
 }

.item4 {
  width: 500px;
  flex: none;
  너비를 px단위로 설정하고 flex:none을 주면 아이템 크기가 고정됨
  min-width, max-width가 동시에 들어갔다고 생각
  background-color: #333;
 } */

 /* .container5 {
  display: flex;
  border: 3px solid #333;
  height: 500px;
 }

 .item5 {
  height: 50px;
  margin: auto ; 
   특정아이템만 정렬,flex가 없으면 정렬은 되지 않음 
  auto:가운데 정렬 (좌우여백동일하여 가운데정렬됨)
  background-color: #333;
 } */

